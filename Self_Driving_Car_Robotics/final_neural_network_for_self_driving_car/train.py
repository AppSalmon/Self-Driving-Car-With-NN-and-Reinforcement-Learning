import numpy as np
from sklearn.neural_network import MLPClassifier
import joblib

# Training data: [distanceL, distanceF, distanceR]
# 0 = backward, 1 = forward, 2 = left, 3 = right
X = np.array([
    [100.0, 50.0, 70.0], 
    [30.0, 100.0, 70.0],
    [30.0, 50.0, 100.0],
    [100.0, 20.0, 50.0],
    [20.0, 100.0, 50.0],
    [20.0, 50.0, 100.0],
    [100.0, 40.0, 60.0],
    [40.0, 100.0, 60.0],
    [40.0, 60.0, 100.0], # 2, 1, 3, 2, 1, 3, 2, 1, 3
    [100.9103575, 53.37714919, 71.15747867],
    [35.39947784, 99.59738974, 65.60469093],
    [20.68332566, 46.04215683, 91.37211692],
    [108.49690012, 13.60494719, 55.14515261],
    [29.95199043, 108.65410282, 55.57428996],
    [19.86630349, 42.61141768, 95.39895189],
    [93.94008324, 31.32133779, 60.51107566],
    [31.25012986, 105.38063167, 61.11916574],
    [31.1445824, 69.02783818, 109.0637867], # 2, 1, 3, 2, 1, 3, 2, 1, 3
    [96.55896951, 42.24914372, 66.08782937],
    [31.11080489, 90.65394412, 61.20898433],
    [92.20905343, 30.88310091, 50.53731707], # 2, 1, 2
    [45.72023969, 96.5831026, 64.5775995], 
    [49.28699175, 56.91424312, 104.12136001], 
    [103.38490686, 45.0856946, 73.05591681], # 1, 3, 2
    [38.67849179, 107.5747076, 62.33881021],
    [29.51573287, 58.07584478, 101.62116904],
    [105.90421395, 15.65888756, 58.26267302], # 1, 3, 2
    [15.32811392, 104.83424654, 56.71501865],
    [17.40530627, 47.67700799, 101.6759194],
    [94.45057008, 47.22629659, 55.13151207], # 1, 3, 2
    [18.42625176, 11.3378987, 10.08270417],
    [5.4869678, 3.45382933, 9.66653504],
    [10.01183747, 8.77091714, 8.51600917],
    [12.69518317, 10.74858366, 5.11071483],
    [8.42625176, 11.3378987, 10.08270417],
    [10.0, 15.0, 7.0],
    [13.0, 10.0, 17.0],
    [13.0, 15.0, 10.0],
    [10.0, 12.0, 15.0],
    [12.0, 10.0, 15.0], # 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
])
print(len(X))
# [distanceF, distanceR, distanceL]
y = np.array([
    2, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1, 2, 1, 3, 2, 1, 3, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
])
print(len(y))

# Train a neural network
clf = MLPClassifier(hidden_layer_sizes=(5,), max_iter=1000, random_state=42)
clf.fit(X, y)

# Save the model
joblib.dump(clf, 'nn_model.pkl')

# Print the weights
print("Input Layer Weights:", clf.coefs_[0])
print("Hidden Layer Weights:", clf.coefs_[1])
print("Input Layer Biases:", clf.intercepts_[0])
print("Hidden Layer Biases:", clf.intercepts_[1])
